Main Activity.java

package com.example.hppc.healthcare;

import android.database.Cursor;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;


public class MainActivity extends AppCompatActivity {
    DatabaseHelper myDb;
    EditText editHeight,editWeight,editTextID;
    TextView result;
    Button btnAddData;
    Button btnviewDetails;
    Button btnviewUpdate;
    Button btnDelete;
    Button btnShowBmi;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        myDb = new DatabaseHelper(this);

        editHeight = (EditText)findViewById(R.id.editText);
        editWeight = (EditText)findViewById(R.id.editText2);
        editTextID     = (EditText)findViewById(R.id.editID);
        btnAddData = (Button)findViewById(R.id.button2);
        btnviewDetails = (Button)findViewById(R.id.button3);
        btnviewUpdate = (Button)findViewById(R.id.button4);
        btnDelete = (Button)findViewById(R.id.button5);
        result = (TextView)findViewById(R.id.textView3);
        result = (TextView)findViewById(R.id.textView3);

            AddData();
            viewAll();
            UpdateData();
            DeleteData();
            calculateBmi();


        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override

            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });

        btnShowBmi.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ////////method;
            }
        });


    }

    public void calculateBmi() {
        String Height = editHeight.getText().toString();
        String Weight = editWeight.getText().toString();

        if (Height != null && !"".equals(Height) && Weight != null && !"".equals(Weight)) {
            Float HeightValue = Float.parseFloat(Height) / 100;
            Float WeightValue = Float.parseFloat(Weight);

            float bmi = WeightValue / (HeightValue * HeightValue);
            displayBMI(bmi);
        }


    }

    private void displayBMI(float bmi) {
        String bmiLabel1 = "";

        if (Float.compare(bmi, 15f) <= 0) {
            bmiLabel1 = "Very severely UnderWeight ";
        } else if (Float.compare(bmi, 15f) > 0 && Float.compare(bmi, 16f) <= 0) {
            bmiLabel1 = "Severely UnderWeight ";
        } else if (Float.compare(bmi, 16f) > 0 && Float.compare(bmi, 18.5f) <= 0) {
            bmiLabel1 = "UnderWeight ";
        } else if (Float.compare(bmi, 18.5f) > 0 && Float.compare(bmi, 25f) <= 0) {
            bmiLabel1 = "Normal ";
        } else if (Float.compare(bmi, 25f) > 0 && Float.compare(bmi, 30f) <= 0) {
            bmiLabel1 = "Overweight ";
        } else if (Float.compare(bmi, 30f) > 0 && Float.compare(bmi, 35f) <= 0) {
            bmiLabel1 = "obese level I ";
        } else if (Float.compare(bmi, 35f) > 0 && Float.compare(bmi, 40f) <= 0) {
            bmiLabel1 = "obese level II ";
        } else {
            bmiLabel1 = "obese level III ";
        }

        bmiLabel1 = bmi + "\n" + bmiLabel1;
        result.setText(bmiLabel1);

    }


    public void DeleteData(){
        btnDelete.setOnClickListener(
                new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        Integer deletedRows = myDb.deleteData(editTextID.getText().toString());
                        if(deletedRows > 0)
                            Toast.makeText(MainActivity.this,"Data Deleted",Toast.LENGTH_LONG).show();
                        else
                            Toast.makeText(MainActivity.this,"Data not Deleted",Toast.LENGTH_LONG).show();


                    }
                }
        );
    }

    public void UpdateData(){
        btnviewUpdate.setOnClickListener(
                new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        boolean isUpdate = myDb.updateData(editTextID.getText().toString(),
                                editHeight.getText().toString(),
                                editWeight.getText().toString());
                        if(isUpdate == true)
                            Toast.makeText(MainActivity.this,"Data Update",Toast.LENGTH_LONG).show();
                        else
                            Toast.makeText(MainActivity.this,"Data not Update",Toast.LENGTH_LONG).show();


                    }
                }

        );
    }

    public void AddData(){
        btnAddData.setOnClickListener(
            new View.OnClickListener(){

                public void onClick(View v){
                    myDb.insertData(editHeight.getText().toString(),
                                    editWeight.getText().toString());

                    boolean isInserted = false;
                    if(isInserted == true)
                        Toast.makeText(MainActivity.this, "Data Inserted", Toast.LENGTH_SHORT).show();
                    else
                        Toast.makeText(MainActivity.this, "Data Not Inserted", Toast.LENGTH_SHORT).show();
                }
            }

            );
    }

    public void viewAll(){
        btnviewDetails.setOnClickListener(
                new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        Cursor res = myDb.getAllData();
                        if(res.getCount()==0){
                            //show message
                            showMessage("Error","No data found");

                            return;
                        }

                        StringBuffer buffer = new StringBuffer();
                        while(res.moveToNext()){
                            buffer.append("Height : "+ res.getString(2)+"\n") ;
                            buffer.append("Weight : "+ res.getString(3)+"\n") ;
                            //buffer.append("bmi : "+ res.getString(2)+"\n\n") ;

                        }
                        showMessage("Data",buffer.toString());
                    }
                }


        );
    }

    public void showMessage(String title, String Message){
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setCancelable(true);
        builder.setTitle(title);
        builder.setMessage(Message);
        builder.show();
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}
